@mixin breakpoint($class) {
  @if $class == xs {
    @media (max-width: 767px) { @content; }
  }

  @else if $class == sm {
    @media (max-width: 768px) { @content; }
  }

  @else if $class == md {
    @media (max-width: 992px) { @content; }
  }

  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }

  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

@mixin transition {
  -webkit-transition: all $animationDuration ease-in-out;
  -moz-transition: all $animationDuration ease-in-out;
  -o-transition: all $animationDuration ease-in-out;
  transition: all $animationDuration ease-in-out;
}

@mixin transition {
  -webkit-transition: all $animationDuration ease-in-out;
  -moz-transition: all $animationDuration ease-in-out;
  -o-transition: all $animationDuration ease-in-out;
  transition: all $animationDuration ease-in-out;
}
@keyframes easeUp {
  0% {
    transform: translateY($buffer*2);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
@keyframes easeDown {
  0% {
    transform: translateY(-$buffer*2);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

@mixin animation($duration, $delay, $animation) {
  animation: $duration ease-out $delay 1 $animation forwards;
}

@mixin shadow() {
  box-shadow: 0px 20px 40px rgba(0,0,0,.1);
}

[data-aos="worksFade"] {
  // opacity: 0;
  &.aos-animate {
    @include animation($animationDuration, 0s, easeUp);
  }
}
[data-aos="worksFade1"] {
  // opacity: 0;
  &.aos-animate {
    @include animation($animationDuration, 1s, easeUp);
  }
}
[data-aos="worksFade2"] {
  // opacity: 0;
  &.aos-animate {
    @include animation($animationDuration, 2s, easeUp);
  }
}
